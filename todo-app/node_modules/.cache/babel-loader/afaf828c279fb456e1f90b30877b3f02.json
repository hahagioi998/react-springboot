{"ast":null,"code":"var _jsxFileName = \"/Users/rishipatel/Desktop/personal/dev-projects/react-springboot/todo-app/src/components/todo/AuthenticatedRoute.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticatedRoute extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (AuthenticationService.isUserLoggedIn()) {\n      return /*#__PURE__*/_jsxDEV(Route, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default AuthenticatedRoute;","map":{"version":3,"sources":["/Users/rishipatel/Desktop/personal/dev-projects/react-springboot/todo-app/src/components/todo/AuthenticatedRoute.jsx"],"names":["React","PureComponent","Route","AuthenticationService","AuthenticatedRoute","constructor","props","state","render","isUserLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,kBAAN,SAAiCH,aAAjC,CAA+C;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIL,qBAAqB,CAACM,cAAtB,EAAJ,EAA4C;AAC1C,0BAAO,QAAC,KAAD,OAAW,KAAKH;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAb4C;;AAgB/C,eAAeF,kBAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport AuthenticationService from \"./AuthenticationService\";\n\nclass AuthenticatedRoute extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    if (AuthenticationService.isUserLoggedIn()) {\n      return <Route {...this.props}></Route>;\n    } else {\n      return <Redirect to=\"/login\"></Redirect>;\n    }\n  }\n}\n\nexport default AuthenticatedRoute;\n"]},"metadata":{},"sourceType":"module"}